generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @map("_id") @default(auto()) @db.ObjectId
  email           String      @unique
  name            String
  followedArtists String[]
  listenLogs      ListenLog[]
  follows         Follow[]
}

model Song {
  id          String       @id @map("_id") @default(auto()) @db.ObjectId
  name        String
  previewUrl  String?
  albumId     String       @db.ObjectId
  album       Album        @relation(fields: [albumId], references: [id])
  songArtists SongArtist[]
  listenLogs  ListenLog[]
}

model Album {
  id           String        @id @map("_id") @default(auto()) @db.ObjectId
  name         String
  coverUrl     String?
  tracks       Song[]
  albumArtists AlbumArtist[]
}

model Artist {
  id           String        @id @map("_id") @default(auto()) @db.ObjectId
  name         String
  coverUrl     String?
  topSongIds   String[]
  songArtists  SongArtist[]
  albumArtists AlbumArtist[]
  followedBy   Follow[]
}

model ListenLog {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  songId    String   @db.ObjectId
  userId    String   @db.ObjectId
  timestamp DateTime @default(now())
  song      Song     @relation(fields: [songId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model AlbumArtist {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  album    Album  @relation(fields: [albumId], references: [id])
  albumId  String @db.ObjectId
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String @db.ObjectId

  @@unique([albumId, artistId])
}

model SongArtist {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  song     Song   @relation(fields: [songId], references: [id])
  songId   String @db.ObjectId
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String @db.ObjectId

  @@unique([songId, artistId])
}

model Follow {
  id       String @id @map("_id") @default(auto()) @db.ObjectId
  user     User   @relation(fields: [userId], references: [id])
  userId   String @db.ObjectId
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String @db.ObjectId

  @@unique([userId, artistId])
}